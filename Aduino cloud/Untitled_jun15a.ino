#include "arduino_secrets.h"
/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/50264fb9-19da-46df-b8f6-d97c5a153786 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  float heatindex;
  float sound;
  CloudDimmedLight light1;
  CloudTemperatureSensor temperature;
  CloudRelativeHumidity humidity;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"
#include "DHT.h"

#define DHTPIN 5
#define DHTTYPE DHT11

DHT dht(DHTPIN, DHTTYPE);

#define LED_PWM_PIN   18
const int freq = 5000;
const int ledChannel = 0;
const int resolution = 15; //Resolution 8, 10, 12, 15
int pwm;

int sound_dpin = 21;
int sound_apin = 36;

void Sound_levels();
void tempandhumidity() ;


void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information you’ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
  
  dht.begin();
  
  pinMode(LED_PWM_PIN, OUTPUT);
  ledcSetup(ledChannel, freq, resolution);
  ledcAttachPin(LED_PWM_PIN, ledChannel);
  
  pinMode(sound_dpin, INPUT);
  pinMode(sound_apin, INPUT);
}

void loop() {
  ArduinoCloud.update();
  // Your code here 
  Sound_levels();
  tempandhumidity();
}

/*
  Since Light1 is READ_WRITE variable, onLight1Change() is
  executed every time a new value is received from IoT Cloud.
*/
void onLight1Change()  {
  // Add your code here to act upon Light1 change
  
  if(light1.getSwitch() == 1) {
    pwm = map(light1.getBrightness(), 0, 100, 0, 1023);
    ledcWrite(ledChannel, pwm);
    Serial.println("on");
  }
  else {
    ledcWrite(ledChannel, 0);
    Serial.println("off");
  }
}

void Sound_levels() {
  int digital_val = digitalRead(sound_dpin);
  int analog_val = analogRead(sound_apin);

  Serial.print("\n");
  Serial.print(analog_val);
  Serial.print("\n");
  Serial.print(digital_val);
  
  sound = analog_val;
  
}



void tempandhumidity() {
    delay(2050);

  // Reading temperature or humidity takes about 250 milliseconds!
  // Sensor readings may also be up to 2 seconds 'old' (its a very slow sensor)
  float h = dht.readHumidity();
  // Read temperature as Celsius (the default)
  float t = dht.readTemperature();

  // Check if any reads failed and exit early (to try again).
  if (isnan(h) || isnan(t)) {
    Serial.println(F("Failed to read from DHT sensor!"));
    return;
  }

  // Compute heat index in Celsius (isFahreheit = false)
  float hic = dht.computeHeatIndex(t, h, false);
  
  temperature = t;
  humidity = h;
  heatindex = hic;

  Serial.print(F("Humidity: "));
  Serial.print(h);
  Serial.print(F("%  Temperature: "));
  Serial.print(t);
  Serial.print(F("°C "));
  Serial.print(F("Heat index: "));
  Serial.print(hic);
  Serial.print(F("°C "));
}
